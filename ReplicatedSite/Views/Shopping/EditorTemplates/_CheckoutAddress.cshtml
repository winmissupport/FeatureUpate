@model Address
@{
    var contextID = Guid.NewGuid().ToString();

    var defaultCountryCode = (Model.Country.IsNotNullOrEmpty()) ? Model.Country : GlobalSettings.Company.Address.Country;
    var defaultRegionCode = (Model.State.IsNotNullOrEmpty()) ? Model.State : GlobalSettings.Company.Address.State;
    var isVerifyable = ViewData["VerifyEnabled"] == null || Convert.ToBoolean(ViewData["VerifyEnabled"]) == true;
}

<div class="view-address container" id="view-address-@contextID">

    @Html.HiddenFor(c => c.AddressType, new { data_role = "AddressType" })

    <div class="row">
        <div class="form-group col-xs-6">
            @Html.LabelFor(c => c.Country, new { @class = "control-label full-width" })<abbr>*</abbr>
            @Html.DropDownListFor(c => c.Country,
            selectList: Html.Countries(defaultCountryCode),
            htmlAttributes: new
            {
                @class = "form-control",
                data_region_bind = "#" + Html.IdFor(c => c.State) + "_" + contextID,
                data_address_bind = "#" + Html.IdFor(c => c.Address2) + "_" + contextID,
                data_role = "Country"
            })
            @Html.ValidationMessageFor(c => c.Country)
        </div>
        <div class="space-5"></div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(c => c.Address1, new { @class = "control-label" })<abbr>*</abbr>
            @Html.TextBoxFor(c => c.Address1, new
        {
            @class = "form-control",
            placeholder = "Street address",
            data_role = "Address1"
        })
            @Html.ValidationMessageFor(c => c.Address1)

            <div class="space-5"></div>
            <div class="form-group col-xs-6" @if (defaultCountryCode == "US") { <text> style="display: none;" </text>      }>
                @Html.TextBoxFor(c => c.Address2, new
            {
                @class = "form-control",
                placeholder = "Apartment, suite, unit, building, floor, etc.",
                id = Html.IdFor(c => c.Address2) + "_" + contextID,
                data_role = "Address2"
            })
                @Html.ValidationMessageFor(c => c.Address2)
            </div>
        </div>



        <div class="row margin-5">
            <div class="col-xs-3 half first">
                <div class="form-group">
                    @Html.LabelFor(c => c.City, new { @class = "control-label visible-xs" })<abbr>*</abbr>
                    @Html.TextBoxFor(c => c.City, new
                {
                    @class = "form-control",
                    placeholder = "City",
                    data_role = "City"
                })
                    @Html.ValidationMessageFor(c => c.City)
                </div>
            </div>
            <div class="col-xs-3 half">
                <div class="form-group">
                    @Html.LabelFor(c => c.Zip, new { @class = "control-label visible-xs" })<abbr>*</abbr>
                    @Html.TextBoxFor(c => c.Zip, new
                {
                    @class = "form-control",
                    placeholder = "Zip code",
                    data_role = "Zip"
                })
                    @Html.ValidationMessageFor(c => c.Zip)
                </div>
            </div>
            <div class="col-xs-6 full-width">
                <div class="form-group">
                    @Html.LabelFor(c => c.State, new { @class = "control-label visible-xs" })<abbr>*</abbr>
                    @Html.DropDownListFor(c => c.State,
                    selectList: Html.Regions(defaultCountryCode, defaultRegionCode),
                    htmlAttributes: new
                    {
                        @class = "form-control",
                        id = Html.IdFor(c => c.State) + "_" + contextID,
                        data_role = "State"
                    })
                    @Html.ValidationMessageFor(c => c.State)
                </div>
            </div>


        </div>
        <div class="space-10"></div>
        @if (isVerifyable)
        {
            <div class="row margin-5">
                <div class="col-xs-12">
                    <button type="button" class="btn btn-info" data-role="verify">Verify Address</button>
                </div>
            </div>
        }
    </div>
    
</div>



@*<label>Street Address: <abbr>*</abbr></label><input type="text" class="input-text " value="" />


    <div class="half first"><label>Town / City:  <abbr>*</abbr></label><input type="text" placeholder="" value="" /></div>
    <div class="half"><label>Postcode / Zip:<abbr>*</abbr></label><input type="text" placeholder="" value="" /></div>


    <div class="fullwidth">
        <label>State: <abbr>*</abbr></label>
        <select><option value="">Select a state&hellip;</option><option value="AL">Alabama</option><option value="AK">Alaska</option><option value="AZ">Arizona</option><option value="AR">Arkansas</option><option value="CA">California</option><option value="CO">Colorado</option><option value="CT">Connecticut</option><option value="DE">Delaware</option><option value="DC">District Of Columbia</option><option value="FL">Florida</option><option value="GA">Georgia</option><option value="HI">Hawaii</option><option value="ID">Idaho</option><option value="IL">Illinois</option><option value="IN">Indiana</option><option value="IA">Iowa</option><option value="KS">Kansas</option><option value="KY">Kentucky</option><option value="LA">Louisiana</option><option value="ME">Maine</option><option value="MD">Maryland</option><option value="MA">Massachusetts</option><option value="MI">Michigan</option><option value="MN">Minnesota</option><option value="MS">Mississippi</option><option value="MO">Missouri</option><option value="MT">Montana</option><option value="NE">Nebraska</option><option value="NV">Nevada</option><option value="NH">New Hampshire</option><option value="NJ">New Jersey</option><option value="NM">New Mexico</option><option value="NY">New York</option><option value="NC">North Carolina</option><option value="ND">North Dakota</option><option value="OH">Ohio</option><option value="OK">Oklahoma</option><option value="OR">Oregon</option><option value="PA">Pennsylvania</option><option value="RI">Rhode Island</option><option value="SC">South Carolina</option><option value="SD">South Dakota</option><option value="TN">Tennessee</option><option value="TX">Texas</option><option value="UT">Utah</option><option value="VT">Vermont</option><option value="VA">Virginia</option><option value="WA">Washington</option><option value="WV">West Virginia</option><option value="WI">Wisconsin</option><option value="WY">Wyoming</option><option value="AA">Armed Forces (AA)</option><option value="AE">Armed Forces (AE)</option><option value="AP">Armed Forces (AP)</option><option value="AS">American Samoa</option><option value="GU">Guam</option><option value="MP">Northern Mariana Islands</option><option value="PR">Puerto Rico</option><option value="UM">US Minor Outlying Islands</option><option value="VI">US Virgin Islands</option></select>
    </div>*@

@using (Html.BeginPartialScript())
{
    <script>
        require(["modules/addresses"], function (address) {
            address.bind('#view-address-@contextID');
        });
    </script>
}
