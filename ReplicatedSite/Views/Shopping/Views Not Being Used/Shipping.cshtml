@model ShippingAddressesViewModel
@{
    ViewBag.Title = Resources.Labels.ShippingAddress;
}

<div id="view-ordershipping" class="container checkout-shipping">
    <div class="row">
        <div class="col-xs-6">
            @if (Model.Addresses != null && Model.Addresses.Count() > 0)
            {
                <h3>@Resources.Labels.SelectShippingAddress</h3>

                <div class="row">
                    @foreach (var address in Model.Addresses)
                    {
                        <div class="col-sm-4">
                            @Html.DisplayFor(c => address)

                            <div class="space-15"></div>
                            @using (Html.BeginForm(new { novalidate = "novalidate" }))
                            {
                                using (Html.BeginHtmlFieldPrefixScope("Address"))
                                {
                                    @Html.Partial("~/Views/Shared/EditorTemplates/ShippingAddressOnFile.cshtml", address)
                                }


                                @Html.AntiForgeryToken()

                                <button type="submit" class="btn">@Resources.Labels.ShipToThisAddress</button>
                            }
                        </div>
                    }
                </div>
                <div class="space-50"></div>
                <hr />
                <div class="space-30"></div>
            }


            <h3>@Resources.Labels.AddNewAddress</h3>

            <div class="row">
                <div class="col-sm-12">
                    @using (Html.BeginForm())
                    {
                        var Address = new ShippingAddress();
                        Address.AddressType = AddressType.New;

                        @Html.EditorFor(c => Address)

                        <div class="form-group">
                            <button type="submit" class="btn">@Resources.Labels.ShipToThisAddress</button>
                        </div>


                        @Html.AntiForgeryToken()
                    }
                </div>
            </div>
        </div>
        <div class="col-xs-6">
            @* Dynamically Injected *@
            <div id="order-summary"></div>
        </div>
    </div>
</div>





@section scripts
{
    <script>
        (function () {

            // Settings
            var context = "#view-ordershipping",
                $context = $(context),
                errorMessage = "@Request.QueryString["error"]";


            // Event Handlers
            function registerEventHandlers() {
            }


            // Actions
            var actions = {
            };


            // Helpers
            var helpers = {
                handleErrors: function () {
                    if (errorMessage != null && errorMessage.length > 0) {
                        toastr.error(errorMessage, "Error");
                    }
                }
            };


            // Initialization
            function init() {
                registerEventHandlers();

                helpers.handleErrors();
            }
            init();

        })();
    </script>
}