@model IEnumerable<Order>
@{
    ViewBag.Title = Resources.Common.YourOrders;
    Layout = "~/Views/Account/_Layout.cshtml";

    var action = ViewContext.RouteData.Values["action"].ToString().ToLower();
    var page = Convert.ToInt32(ViewContext.RouteData.Values["page"]);
    var isSearch = ViewBag.IsSearch != null && ViewBag.IsSearch == true;
}

<h3 class="page-header no-margin">@Resources.Common.YourOrders</h3>
<div class="space-20"></div>

<nav class="navbar navbar-default" role="navigation">
    <div class="navbar-form navbar-left" role="search">
        <div class="form-group">
            <input type="search" id="searchordersfilter" value="@ViewContext.RouteData.Values["id"]" class="form-control input-sm" placeholder="Order#..." />
        </div>
        <button type="button" id="searchorders" class="btn btn-primary btn-sm">@Resources.Common.SearchOrders</button>
        @if (isSearch)
        {
            <a href="@Url.Action("orderlist")" class="btn btn-default btn-sm">Clear</a>
        }
    </div>
    <div class="navbar-right" style="margin-right: 10px;">
        <a href="@Url.Action(action, new { page = (page == 1) ? page : page - 1 })" class="btn btn-default btn-sm navbar-btn"><i class="fa-chevron-left"></i> @Resources.Common.Newer</a>
        <a href="@Url.Action(action, new { page = (Model.Count() > 0) ? page + 1 : page })" class="btn btn-default btn-sm navbar-btn">@Resources.Common.Older <i class="fa-chevron-right"></i></a>
    </div>
</nav>


<ul class="nav nav-pills">
    <li class="@((action == "openorderslist") ? "active" : "")"><a href="@Url.Action("openorderslist")">@Resources.Common.OpenOrders</a></li>
    <li class="@((action == "shippedorderslist") ? "active" : "")"><a href="@Url.Action("shippedorderslist")">@Resources.Common.ShippedOrders</a></li>
    <li class="@((action == "declinedorderslist") ? "active" : "")"><a href="@Url.Action("declinedorderslist")">@Resources.Common.DeclinedOrders</a></li>
    <li class="@((action == "cancelledorderslist") ? "active" : "")"><a href="@Url.Action("cancelledorderslist")">@Resources.Common.CancelledOrders</a></li>
    <li class="@((action == "PendingAutoOrderList") ? "active" : "")"><a href="@Url.Action("PendingAutoOrderList")">@Resources.Common.PendingOrders</a></li>
    <li class="@((action == "orderlist") ? "active" : "")"><a href="@Url.Action("orderlist")">@Resources.Common.AllOrders</a></li>

    @if (isSearch)
    {
        <li class="@((action == "searchorderslist") ? "active" : "")"><a href="@Url.Action("searchorderslist")">@Resources.Common.SearchResults</a></li>
    }
</ul>
<div class="space-10"></div>


<div class="orderlist well">

    @if (isSearch)
    {
        <h4>@Model.Count() @Resources.Common.OrdersFound</h4>
    }

    @foreach (var order in Model.OrderByDescending(c => c.OrderDate).Take(10))
    {
        if (order.OrderTypeID == OrderTypes.RecurringOrder && order.OrderStatusID == OrderStatuses.Pending && GlobalUtilities.GetSelectedCountryCode() != "US")
        {
            @Html.DisplayFor(c => order, "IdealSummary")

        }
        else
        {
            @Html.DisplayFor(c => order, "OrderSummary")
        }
    }
    @if (Model.Count() == 0)
    {
        <hr />
        <p class="text-center text-muted">@Resources.Common.NoOrdersFound</p>
    }

</div>

<nav class="well well-sm no-padding">
    <div class="text-center">
        <a href="@Url.Action(action, new { page = (page == 1) ? page : page - 1 })" class="btn btn-default navbar-btn"><i class="fa-chevron-left"></i> @Resources.Common.Newer</a>
        <a href="@Url.Action(action, new { page = (Model.Count() > 0) ? page + 1 : page })" class="btn btn-default navbar-btn">@Resources.Common.Older <i class="fa-chevron-right"></i></a>
    </div>
</nav>



@section scripts
{
    <script>
        (function () {

            // Event Handlers
            function registerEventHandlers() {
                $('#searchordersfilter').on('keypress', function (event) {
                    if (event.which == 13) {
                        event.preventDefault();
                        actions.searchOrder($('#searchordersfilter').val());
                    }
                });
                $('#searchorders').on('click', function () {
                    actions.searchOrder($('#searchordersfilter').val());
                });
            }


            // Actions
            var actions = {
                searchOrder: function (id) {
                    if (id == '' || isNaN(id)) window.location = '@Url.Action("orderlist")';
                    else window.location = '@Url.Action("searchorderslist", new { id = 0 })'.replace('0', '') + id;
                }
            };


            // Initialization
            function init() {
                registerEventHandlers();
            }
            init();

        })();
    </script>
}