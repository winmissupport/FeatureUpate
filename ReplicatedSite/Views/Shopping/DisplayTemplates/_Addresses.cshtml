@model CheckoutViewModel
@{
    ViewBag.Title = Resources.Labels.ShippingAddress;
    var contextID = Guid.NewGuid().ToString();

    var ShippingAddress = new ShippingAddress();
    ShippingAddress.AddressType = AddressType.New;


    var defaultCountryCode = (ShippingAddress.Country.IsNotNullOrEmpty()) ? ShippingAddress.Country : GlobalSettings.Company.Address.Country;
    var defaultRegionCode = (ShippingAddress.State.IsNotNullOrEmpty()) ? ShippingAddress.State : GlobalSettings.Company.Address.State;
    var isVerifyable = ViewData["VerifyEnabled"] == null || Convert.ToBoolean(ViewData["VerifyEnabled"]) == true;
}

<div id="view-ordershipping" class="container checkout-shipping view-cart">

    <div class="row">
        <div class="checkout-content">
            @if (Model.Addresses != null && Model.Addresses.Count() > 0)
            {
                <h3>@Resources.Labels.SelectShippingAddress</h3>

                <div class="row">
                    @foreach (var address in Model.Addresses)
                    {
                        <div class="col-sm-4">
                            @Html.DisplayFor(c => address)

                            <div class="space-15"></div>
                            @using (Html.BeginForm(new { novalidate = "novalidate" }))
                            {
                                using (Html.BeginHtmlFieldPrefixScope("Address"))
                                {
                                    @Html.Partial("~/Views/Shared/EditorTemplates/ShippingAddressOnFile.cshtml", address)
                                }


                                @Html.AntiForgeryToken()
                                <label class="control-label">
                                    @Resources.Labels.ShipToThisAddress
                                    <input type="checkbox" name="SelectAddress" />
                                </label>

                            }
                        </div>
                    }

                </div>

                <div class="space-30"></div>

            }


            

            <div class="row margin-5">
                <div class="col-xs-6 shipping-address">
                    <h3>@Resources.Labels.AddNewAddress</h3>

                    @using (Html.BeginForm())
                    {
                        var Address = new ShippingAddress();
                        Address.AddressType = AddressType.New;

                        @Html.EditorForModel("_CheckoutShippingAddress", Address)

                        @*<div class="form-group">
                                <button type="submit" class="btn">@Resources.Labels.ShipToThisAddress</button>
                            </div>*@

                        @Html.AntiForgeryToken()
                    }
                </div>
            </div>
        </div>

    </div>
    <div class="row">

        <div class="col-sm-6">

            <!-- Billing Details Content -->

            <div class="checkbox billingsameasshipping">
                <label>
                    <input type="checkbox" name="BillingSameAsShipping" value="true" checked /> @Resources.Labels.BillingAddressSameAsShipping
                    <input type="hidden" value="false" name="BillingSameAsShipping" />
                </label>
            </div>
            <div class=".view-address" id="billing-address-form" style="position: relative;">

                @{
                    var BillingAddress = new Address();
                    BillingAddress.AddressType = AddressType.New;

                }

                <div class="form-group">
                    <label for="@Model.BillingName" class="control-label">
                        @Resources.Labels.NameOnCard
                    </label>
                    @Html.EditorFor(c => Model.BillingName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       name = Html.NameFor(c => c.BillingName),
                       id = Html.IdFor(c => c.BillingName),
                   }
               })
                </div>

                @Html.EditorFor(c => Model.BillingAddress, BillingAddress)


            </div>
            <div class="clearfix"></div>

            <a href="@Url.Action("Continue", "Shopping", new { step = "delivery" })" class="continue button color">Continue</a>

        </div>

    </div>
</div>








@using (Html.BeginPartialScript())
{
    <script>
        $('#billing-address-form').hide();

        $('input:checkbox[name="BillingSameAsShipping"]').click(function () {
            $('#billing-address-form').slideToggle('fast');

        });

        $('input:checkbox[name="SelectAddress"]').click(function () {
            $('.shipping-address').slideToggle('fast');

        });

        required(["ajax", "pubsub"], function (ajax, pubusb) {

            // Settings
            var context = ".view-cart",
                $context = $(context),
                errorMessage = "@Request.QueryString["error"]";


            // Event Handlers
            function registerEventHandlers() {
                $('[data-toggle]', $context).on('click', function () {
                    var $target = $($(this).data('toggle'));
                    $target.slideToggle('fast');
                });

                $('input:checkbox[name="BillingSameAsShipping"]').each(function () {
                    $(this).triggerHandler('change');
                });
            }


            // Actions
            var actions = {
            };


            // Helpers
            var helpers = {
                handleErrors: function () {
                    if (errorMessage != null && errorMessage.length > 0) {
                        toastr.error(errorMessage, "Error");
                    }
                }
            };


            // Initialization
            function init() {
                registerEventHandlers();

                helpers.handleErrors();
            }
            init();

        })();
    </script>
}
